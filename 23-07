// daily ques

class Solution {
    public int[] frequencySort(int[] nums) {
        int[] freq = new int[201];
        List<Integer> list = new ArrayList<>();
        for (int num : nums){
            freq[num + 100]++;
            list.add(num);
        }
        Collections.sort(list, (a, b) -> {
            return freq[a + 100] == freq[b + 100] ? b - a : freq[a + 100] - freq[b + 100];
        });
        for (int i = 0; i < nums.length; i++)
            nums[i] = list.get(i);
        return nums;
    }
}

// product of array except self

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int [] left = new int[nums.length];
        int [] right = new int[nums.length];
        left[0]=1;
        for(int i=1;i<nums.length;i++){
            left [i] = nums[i-1]*left[i-1];
        }
        right[nums.length-1]=1;
        for(int i=nums.length-2;i>=0;i--){
            right[i] = nums[i+1]*right[i+1];
        }
        int ans[]=  new int[nums.length];
        for(int i=0;i<nums.length;i++){
            ans[i] = left[i]*right[i];
        }
        return ans;
    }
}
